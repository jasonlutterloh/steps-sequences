{"version":3,"sources":["components/Step.js","components/Button.js","components/Counter.js","components/Steps.js","sequences/sample.js","App.js","registerServiceWorker.js","index.js"],"names":["Step","stepData","this","props","className","style","width","title","description","Component","Button","state","additionalClasses","onClick","action","buttonText","Counter","time","duration","countdown","bind","timer","setInterval","clearInterval","newTime","setState","Steps","isButtonEnabled","shouldButtonBeEnabled","isTimerEnabled","shouldTimerBeEnabled","timerDuration","steps","timing","currentStep","height","handleNextStep","handleBackStep","resetSteps","getNewStateValues","updateWindowDimensions","stepNumber","type","window","addEventListener","removeEventListener","innerWidth","innerHeight","callback","resetTimer","newStep","length","stepWidth","stepLeft","left","map","item","index","key","sequence","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8dd24f0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Step.css';\n\nclass Step extends Component {\n  render() {\n    let stepData = this.props.stepData;\n    return (\n      <div className=\"step\" style={{width: this.props.width + 'px'}}>\n        <h2 className=\"step-title\">{stepData.title}</h2>\n        <p className=\"step-description\">{stepData.description}</p>\n      </div>\n    )\n  }\n}\n\nexport default Step;\n","import React, { Component } from 'react';\nimport './Button.css';\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = ({\n      additionalClasses: typeof props.additionalClasses !== 'undefined' ? props.additionalClasses : ''\n    });\n  }\n  render() {\n    return (\n      <button className={\"button \" + this.state.additionalClasses} onClick={this.props.action}>\n        {this.props.buttonText}\n      </button>\n    )\n  }\n}\n\nexport default Button;\n","import React, { Component } from 'react';\nimport './Counter.css';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = ({\n      time: this.props.duration\n    })\n\n    this.countdown = this.countdown.bind(this);\n  }\n  componentDidMount() {\n    this.timer = setInterval(this.countdown, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n  countdown(){\n    let newTime = this.state.time - 1;\n\n    if (newTime < 0) {\n      //TODO: Find a new way other than a hidden JS <audio> to implement this as it doesnt work on mobile browsers.\n      this.props.action();\n    } else {\n      this.setState({time: newTime});\n    }\n  }\n\n  render() {\n    return (\n      <span className=\"counter\">{this.state.time}</span>\n    )\n  }\n}\n\nexport default Counter;\n","import React, { Component } from 'react';\nimport Step from './Step.js';\nimport Button from './Button.js';\nimport Counter from './Counter.js';\nimport './Steps.css';\n\nclass Steps extends Component {\n  constructor (props) {\n    super(props);\n\n    let isButtonEnabled = this.shouldButtonBeEnabled(0);\n    let isTimerEnabled = this.shouldTimerBeEnabled(0);\n    let timerDuration = this.shouldTimerBeEnabled(0) ? props.steps[0].timing.duration : 0;\n\n    this.state = {\n      currentStep: 0,\n      isButtonEnabled: isButtonEnabled,\n      isTimerEnabled: isTimerEnabled,\n      timerDuration: timerDuration,\n      width: 0,\n      height: 0\n    }\n\n    this.handleNextStep = this.handleNextStep.bind(this);\n    this.handleBackStep = this.handleBackStep.bind(this);\n    this.resetSteps = this.resetSteps.bind(this);\n    this.getNewStateValues = this.getNewStateValues.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  shouldTimerBeEnabled(stepNumber) {\n    if (this.props.steps[stepNumber].timing.type === 'timer' || this.props.steps[stepNumber].timing.type === 'manualTimer') {\n      return true;\n    }\n    return false;\n  }\n\n  shouldButtonBeEnabled(stepNumber) {\n    if (this.props.steps[stepNumber].timing.type === 'manual'){\n      return true;\n    }\n    return false;\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  getNewStateValues(stepNumber) {\n    return {\n      currentStep: stepNumber,\n      isButtonEnabled: this.shouldButtonBeEnabled(stepNumber),\n      isTimerEnabled: this.shouldTimerBeEnabled(stepNumber) ,\n      timerDuration: (this.shouldTimerBeEnabled(stepNumber) ? this.props.steps[stepNumber].timing.duration : 0)\n    }\n  }\n\n  resetTimer(callback) {\n    this.setState({\n      isTimerEnabled: false\n    }, callback);\n  }\n\n  handleNextStep() {\n    if (this.props.steps[this.state.currentStep].timing.type === 'manualTimer' && this.state.isButtonEnabled === false){\n      this.setState({\n        isButtonEnabled: true,\n        isTimerEnabled: false\n      });\n    } else {\n      this.resetTimer(() => {\n        let newStep = this.state.currentStep + 1;\n        if (newStep >= this.props.steps.length - 1){\n          this.setState({\n            isButtonEnabled: false,\n            isTimerEnabled: false,\n            currentStep: newStep,\n            timerDuration: 0\n          });\n        } else {\n          this.setState(this.getNewStateValues(newStep));\n        }\n      });\n    }\n  }\n\n  handleBackStep() {\n    this.resetTimer(() => {\n      let newStep = this.state.currentStep - 1;\n      this.setState(this.getNewStateValues(newStep));\n    });\n  }\n\n  resetSteps() {\n    this.resetTimer(() => {\n      let newStep = 0;\n      this.setState(this.getNewStateValues(newStep));\n    });\n  }\n\n  render() {\n    let stepData = this.props.steps;\n    let stepWidth = stepData.length * this.state.width + 'px';\n    let stepLeft = '-' + (this.state.currentStep * this.state.width) + 'px';\n\n    //TODO: Make the footer section readable\n    return (\n      <div>\n        <div className=\"steps\">\n          <div className=\"steps-container\" style={{width: stepWidth, left: stepLeft }}>\n            {stepData.map((item, index) => (\n              <Step key={'Step'+index} stepData = {stepData[index]} width={this.state.width}/>\n            ))}\n          </div>\n        </div>\n        {this.state.currentStep > 0 ? <Button additionalClasses = \"back-button\" action={this.handleBackStep} buttonText = '<' /> : null }\n        {this.state.isTimerEnabled ? <Counter duration={this.state.timerDuration} action={this.handleNextStep}/> : null}\n        {this.state.isButtonEnabled ? <Button action={this.handleNextStep} buttonText = 'Next'/> : null }\n        {this.state.currentStep >= (stepData.length - 1) ? <Button additionalClasses = \"reset-button\" action={this.resetSteps} buttonText = 'Reset'/> : null }\n        {(this.state.currentStep < (stepData.length - 1) && !this.state.isButtonEnabled) ? <Button additionalClasses = \"next-button\" action={this.handleNextStep} buttonText = '>' /> : null }\n      </div>\n    )\n  }\n}\n\nexport default Steps;\n","const sequence = {\n  \"title\" : \"Sample Steps Sequence\",\n  \"description\": \"This description is currently only used for documentation purposes.\",\n  \"steps\" : [\n    {\n      \"title\": \"Step 1: Begin\",\n      \"description\": \"This description should describe what this step is about. It has a manual 'Next' button.\",\n      \"timing\": {\n        \"type\": \"manual\"\n      }\n    },\n    {\n      \"title\": \"Step 2: Do Something\",\n      \"description\": \"This description should describe what this step is about. This has a timer of an alotted number of seconds and then automatically advances to the next step.\",\n      \"timing\": {\n        \"type\": \"timer\",\n        \"duration\": 3\n      }\n    },\n    {\n      \"title\": \"Step 3: Do Something\",\n      \"description\": \"This description should describe what this step is about. It has a timer and then a manual 'Next' button.\",\n      \"timing\": {\n        \"type\": \"manualTimer\",\n        \"duration\": 3\n      }\n    },\n    {\n      \"title\": \"The End!\",\n      \"description\": \"Having a \\\"The End\\\" step is actually important as the last step always presents the reset button.\",\n      \"timing\": {\n        \"type\": \"end\"\n      }\n    }\n  ]\n};\nexport default sequence;\n","import React, { Component } from 'react';\nimport Steps from './components/Steps.js';\nimport sequence from './sequences/sample.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      title: sequence.title,\n      steps: sequence.steps\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"app-container\">\n          <header>\n            <h1 className=\"sequence-title\">{this.state.title}</h1>\n          </header>\n          <Steps steps={this.state.steps} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}